product.name = RunaWFE
# RunaWFE version (synchronized with maven build)
version = ${project.version}
build.date = ${project.build.date}

default.administrator.name = Administrator
default.administrator.password = wf
default.administrators.group.name = Administrators
default.bots.group.name = Bots

#strong.passwords.regexp = ^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(^[a-zA-Z0-9@\$=!:.#%]+$)
strong.passwords.regexp=

scriptingServiceAPI.executeGroovyScript.enabled = false
undefined.variables.allowed = false
strong.variables.format.enabled = true
variables.autocast.enabled = true

escalation.enabled=true
escalation.default.hierarchy.loader=ru.runa.wfe.extension.orgfunction.TestOrgFunction

task.default.deadline=2 hours
task.almostDeadlinePercents=90
task.assignment.strict.rules.enabled = true
task.delegation.enabled=true

# used to prevent cyclic fork execution
token.maximum.depth = 100
# used to prevent cyclic token execution, if positive
token.maximum.length = -1

file.variable.local.storage.enabled = true
file.variable.local.storage.enableforfilesgreaterthan = 100000

# used in date and time formats through the system; time format is always HH:mm or HH:mm:ss
date.format.pattern=dd.MM.yyyy

# Expired jobs check interval
timertask.period.millis.job.execution = 5000
# Unassigned tasks check interval
timertask.period.millis.unassigned.tasks.execution = 60000
# Remove temporary group interval
timertask.period.millis.remove.temp.groups = 10800000
# Asynchronous tasks check interval
timertask.period.millis.async.tasks.checker = 10800000
timertask.cron.cache.usage.statistic.logger = 0 1 0 * * *

# Asynchronous task execution time in seconds after the completion of the process, set <= 0 to disable
async.tasks.ttl.in.seconds = 604800
# Ping chat sessions interval
timertask.period.millis.ping.chat.sessions = 60000
# Clean unused chat files interval
timertask.period.millis.clean.unused.chat.files = 86400000

# whether to enable ru.runa.wfe.service.AuthenticationService.authenticateByTrustedPrincipal(User, String)
trusted.authentication.enabled = false

# configure email notification about errors: use ${processError} for process errors and ${botTaskIdentifier} for bot configuration errors
# error.email.notification.configuration = email.error.notification.xml

# transaction async execution on nodes
# Use new transaction for node execution by default for specified node type
# process.execution.node.async.NodeType = true, for example process.execution.node.async.TASK_STATE = false
process.execution.node.async.default = true
process.execution.node.async.TASK_STATE = false
process.execution.node.async.WAIT_STATE = false
process.execution.node.async.RECEIVE_MESSAGE = false

# Block process execution (tasks and jobs completion) for suspended processes
# process.suspension.block.process.execution = true
# Allow process suspension (in API and web interface)
# process.suspension.enabled = true

process.swimlane.auto.initialization.enabled = false

reassign.swimlane.to.initializer = false
reassign.swimlane.to.task.performer = true

required.validator.names = required

definition.comments.collisions.allowed = false
definition.comments.empty.allowed = true

variables.invalid.default.values.allowed = true
variables.invalid.default.values.allowed.before = 01.01.1970

# Allow or disallow data source password to be imported or exported
datasource.password.export = true

javamelody.disabled = ${maven.profile.javamelody.disabled}
javamelody.datasources = ${maven.profile.hibernate.datasource}

processLog.cleanButton.enabled = false

statistic.report.enabled=false

definition.compatibility.check.enabled = true
definition.compatibility.check.processes.limit = -1
definition.update.delete.tokens.for.missing.nodes = false

global.objects.enabled = true

# It is strongly recommended to set this property large enough to avoid data corruption
# Defaults to 1 hour, 3 600 000
chat.unused.filed.cleaner.older.than.millis = 3600000

filesystem.access.allowed = true